{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"themes/yinwang/source/css/bootstrap-theme.min.css","path":"css/bootstrap-theme.min.css","modified":1,"renderable":1},{"_id":"themes/yinwang/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/yinwang/source/css/style.css","path":"css/style.css","modified":1,"renderable":1},{"_id":"themes/yinwang/source/images/tomorrow-night-blue.png","path":"images/tomorrow-night-blue.png","modified":1,"renderable":1},{"_id":"themes/yinwang/source/images/tomorrow-night-bright.png","path":"images/tomorrow-night-bright.png","modified":1,"renderable":1},{"_id":"themes/yinwang/source/images/tomorrow-night-eighties.png","path":"images/tomorrow-night-eighties.png","modified":1,"renderable":1},{"_id":"themes/yinwang/source/images/tomorrow-night.png","path":"images/tomorrow-night.png","modified":1,"renderable":1},{"_id":"themes/yinwang/source/images/tomorrow-normal.png","path":"images/tomorrow-normal.png","modified":1,"renderable":1},{"_id":"themes/yinwang/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":1,"renderable":1},{"_id":"themes/yinwang/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":1,"renderable":1},{"_id":"themes/yinwang/source/images/index.png","path":"images/index.png","modified":1,"renderable":1},{"_id":"themes/yinwang/source/images/article.png","path":"images/article.png","modified":1,"renderable":1}],"Cache":[{"_id":"source/favicon.ico","hash":"8c076b9cee010484ef058aff92ad1fd6f22c2e6f","modified":1469019481899},{"_id":"themes/yinwang/.gitignore","hash":"118653e917b8b906b051a487dfe715f62244e82b","modified":1469018852917},{"_id":"themes/yinwang/README.md","hash":"04ef384e7c4dd314213565387369d91547fdedac","modified":1469018852917},{"_id":"themes/yinwang/_config.yml","hash":"2869200cb7c9f2b6d7be72c63309a8bdd8cf26b7","modified":1469019783850},{"_id":"source/_posts/2016-07.md","hash":"8483791fe139751e8fecf13f5a33ed308ebe2ee5","modified":1469018178899},{"_id":"source/_posts/R2.md","hash":"57331f1089d9ef9519759cc0357a22730b7d81cd","modified":1469018178899},{"_id":"source/_posts/start.md","hash":"7877a732b28d10f5c0c9faa55e7fb291753bdc36","modified":1469018178899},{"_id":"themes/yinwang/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1469018852881},{"_id":"themes/yinwang/.git/config","hash":"e690bc564783685aa919f8f4d2ca0e1fe42c9ba7","modified":1469018852881},{"_id":"themes/yinwang/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1469018766132},{"_id":"themes/yinwang/.git/index","hash":"a919323e6b354380b693c6033c7bc43bb77282d5","modified":1469019178062},{"_id":"themes/yinwang/.git/packed-refs","hash":"e9c3e2852fc30a44de38f4a6c3a42a431e3cd086","modified":1469018852881},{"_id":"themes/yinwang/languages/zh-Hans.yml","hash":"aee0e4b6ac133b01b7e14d6d2385f5bdff489988","modified":1469018852917},{"_id":"themes/yinwang/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1469018852917},{"_id":"themes/yinwang/layout/layout.ejs","hash":"8a7f747baf0a12a7e549a91a8e56bf0ed00fd477","modified":1469018852917},{"_id":"themes/yinwang/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1469018852917},{"_id":"themes/yinwang/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1469018852917},{"_id":"themes/yinwang/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1469018766132},{"_id":"themes/yinwang/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1469018766132},{"_id":"themes/yinwang/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1469018766132},{"_id":"themes/yinwang/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1469018766132},{"_id":"themes/yinwang/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1469018766132},{"_id":"themes/yinwang/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1469018766132},{"_id":"themes/yinwang/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1469018766132},{"_id":"themes/yinwang/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1469018766132},{"_id":"themes/yinwang/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1469018766132},{"_id":"themes/yinwang/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1469018766132},{"_id":"themes/yinwang/.git/logs/HEAD","hash":"49d583637f5111061672accf880ed6ce9bb6beb4","modified":1469018852881},{"_id":"themes/yinwang/source/css/bootstrap-theme.min.css","hash":"cb987aba7ffc59bb8bb3af241b2a032affc2094f","modified":1469018852917},{"_id":"themes/yinwang/source/css/main.styl","hash":"602979faf656e15e4e4ef60a763156b550cef574","modified":1469018852917},{"_id":"themes/yinwang/source/css/style.css","hash":"2450a6a55a8204449ffab36694231517d8e95a3c","modified":1469018852917},{"_id":"themes/yinwang/source/images/tomorrow-night-blue.png","hash":"7fe4e50e93ab751781560ad2539f53e133062cd8","modified":1469018852921},{"_id":"themes/yinwang/source/images/tomorrow-night-bright.png","hash":"9e04b1b0556c36c9f2b6f54788af381584e4ce8c","modified":1469018852921},{"_id":"themes/yinwang/source/images/tomorrow-night-eighties.png","hash":"dba1a5a0425a1d2651cda7daca52e90843bdbc7a","modified":1469018852921},{"_id":"themes/yinwang/source/images/tomorrow-night.png","hash":"dfa99f5ade90dacb0ce80093df94bddc67395c0c","modified":1469018852921},{"_id":"themes/yinwang/source/images/tomorrow-normal.png","hash":"71ee5c9e1cb2b98c9b8047cd07453dd4cecc6bf2","modified":1469018852921},{"_id":"themes/yinwang/source/js/bootstrap.min.js","hash":"5814e91bb6276f4de8b7951c965f2f190a03978d","modified":1469018852921},{"_id":"themes/yinwang/layout/_partial/afterfooter.ejs","hash":"df911cb7ddbe11219a87f228e6b160ae739c36ed","modified":1469018852917},{"_id":"themes/yinwang/layout/_partial/archive.ejs","hash":"1960d84de29039886b382e0959613331a9cfcf81","modified":1469018852917},{"_id":"themes/yinwang/layout/_partial/article.ejs","hash":"436c06930875e65fbc0d5d35aed1266b4e79f0f9","modified":1469018852917},{"_id":"themes/yinwang/layout/_partial/head.ejs","hash":"4522f42c6c320b8cf22f265ee7a7688a1fda44dc","modified":1469018852917},{"_id":"themes/yinwang/layout/_partial/nav.ejs","hash":"da513e9a2df08a8504e87c787d6dcb746bb90917","modified":1469018852917},{"_id":"themes/yinwang/source/css/bootstrap.min.css","hash":"e2d2b846e9ea72a1985458a3748aab4e01a8fb3a","modified":1469018852917},{"_id":"themes/yinwang/source/images/index.png","hash":"516427859b3516be7a3102f07d4f7934678019de","modified":1469018852921},{"_id":"themes/yinwang/.git/objects/pack/pack-f26a7feb14a10bac5030dc6b7f79c7defc8064d8.idx","hash":"a63d2a8b953ab4b6c8e105b59211b2f571bcb091","modified":1469018852777},{"_id":"themes/yinwang/.git/refs/heads/master","hash":"bc83b2e254ef2c3691ba0937fc84ca0027697f88","modified":1469018852881},{"_id":"themes/yinwang/.git/logs/refs/heads/master","hash":"49d583637f5111061672accf880ed6ce9bb6beb4","modified":1469018852881},{"_id":"themes/yinwang/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1469018852881},{"_id":"themes/yinwang/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1469018852917},{"_id":"themes/yinwang/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1469018852917},{"_id":"themes/yinwang/source/css/_common/components/common.styl","hash":"75da7864794ef9b3a9e7ca24100da692721c71a3","modified":1469018852917},{"_id":"themes/yinwang/source/css/_common/components/components.styl","hash":"c654937f73966ba1fd6ed6874fc71f3b9e430b63","modified":1469018852917},{"_id":"themes/yinwang/source/css/_common/components/home.styl","hash":"6ac987c15f3662a10f5906945dabcba36d39177c","modified":1469018852917},{"_id":"themes/yinwang/source/images/article.png","hash":"e7a7f087ba1d5602da625944f8df51b0cfe1727d","modified":1469018852921},{"_id":"themes/yinwang/.git/logs/refs/remotes/origin/HEAD","hash":"49d583637f5111061672accf880ed6ce9bb6beb4","modified":1469018852881},{"_id":"themes/yinwang/source/css/_common/components/highlight/highlight.styl","hash":"5fc811811ac0cbe4a0b5db9a4888e90f9da3a23c","modified":1469018852917},{"_id":"themes/yinwang/source/css/_common/components/highlight/theme.styl","hash":"ae19721ceee5ba460e131cb2427dae3c1ff39d6f","modified":1469018852917},{"_id":"themes/yinwang/source/css/_common/components/pages/archive.styl","hash":"23dd966324937deeccc8f5fa16a6d32e4e46243b","modified":1469018852917},{"_id":"themes/yinwang/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1469018852917},{"_id":"themes/yinwang/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1469018852917},{"_id":"themes/yinwang/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1469018852917},{"_id":"themes/yinwang/.git/objects/pack/pack-f26a7feb14a10bac5030dc6b7f79c7defc8064d8.pack","hash":"210c7c119ddaadbbb6b934ee25e2819ee6449cf5","modified":1469018852777}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"2016-07-14 --- 2016-08-13","_content":"\n> 此题一共有2k人A，题目表述为暴力和构造函数，应该比较简单，作为开端\n\n[Problem Link-698-A](http://example.net/http://codeforces.com/problemset/problem/689/A)\n\n\n+ my code:\n```c++\nnclude <iostream>\n#include <vector>\nusing namespace std;\nint main(){\n    int n;\n    cin >> n;\n    vector<pair<int, int>> actions;\n    for (int i = 0; i < 12; ++i) {\n        auto cmd = i;\n        if (i == 0) {\n            cmd = 11;\n        }\n        actions.push_back({ (cmd-1) / 3, (cmd % 3 + 3 - 1) % 3 });\n    }\n\n    vector<pair<int, int>> aclist, sub;\n\n    int start;\n    for (int i = 0; i < n; ++i) {\n        char t;\n        cin >> t;\n        int nn = t - '0';\n        if (nn == 0) nn = 11;\n        if (i == 0) start = nn;\n        aclist.push_back(actions[nn]);\n    }\n\n    /*cout << aclist.size() << endl;\n    for (int i = 0; i < aclist.size(); ++i)\n        cout << '(' << aclist[i].first << \", \" << aclist[i].second << \") \";\n    cout << endl << '#' << endl;*/\n\n    for (int j = 1; j < aclist.size(); ++j) {\n        sub.push_back({\n            aclist[j].first - aclist[j - 1].first,\n            aclist[j].second - aclist[j - 1].second});\n    }\n    /*cout << sub.size() << endl;\n    for (int i = 0; i < sub.size(); ++i)\n        cout <<'(' << sub[i].first  << \", \" << sub[i].second << \") \";\n    cout << endl  << '#' << endl;*/\n\n    bool re = true;\n\n    for (int i = 1; i <= 11; ++i) {\n        if (i == 10 || i == start) continue;\n        int x = (i - 1) / 3;\n        int y = (i % 3  + 3 - 1) % 3;\n        bool one_re = true;\n        for (int j = 0; j < sub.size(); ++j) {\n            x += sub[j].first;\n            y += sub[j].second;\n            if ((x>=0 && x<=2 && y >=0 && y<=2) || (x==3 && y ==1)) {\n            } else {\n                one_re = false;\n                break;\n            }\n        }\n        if (one_re) {\n            re = false;\n            break;\n        }\n    }\n\n    if (re) {\n        cout << \"YES\";\n    } else {\n        cout << \"NO\";\n    }\n    /*getchar();\n    getchar();*/\n\n    return 0;\n}\n```\n\n+ Ak's code\n\n```c++\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nint numbers[11];\nint numMap[6][5] = { {-1, -1, -1, -1, -1},\n                     {-1,  1,  2,  3, -1},\n                     {-1,  4,  5,  6, -1},\n                     {-1,  7,  8,  9, -1},\n                     {-1, -1,  0, -1, -1},\n                     {-1, -1, -1, -1, -1} };\n\ntypedef struct\n{\n    int x, y;\n}Point;\n\nPoint findP(int x)\n{\n    Point p;\n    int status = 0;\n    for (int i = 0; i < 6; ++i)\n    {\n        for (int j = 0; j < 5; ++j)\n        {\n            if (numMap[i][j] == x)\n            {\n                p.x = i;\n                p.y = j;\n                status = 1;\n                break;\n            }\n        }\n        if(status == 1)\n            break;\n    }\n    return p;\n}\n\nbool judge(int num[], int k)\n{\n    Point p[k+1];\n    for (int i = 0; i < k; ++i)\n    {\n        p[i] = findP(num[i]);\n    }\n    int okay[4] = { 0 };\n    //左移\n    for (int i = 0; i < k; ++i)\n    {\n        if (numMap[p[i].x-1][p[i].y] == -1)\n            okay[0] = 1;\n    }\n    //右移\n    for (int i = 0; i < k; ++i)\n    {\n        if (numMap[p[i].x+1][p[i].y] == -1)\n            okay[1] = 1;\n    }\n    //上移\n    for (int i = 0; i < k; ++i)\n    {\n        if (numMap[p[i].x][p[i].y-1] == -1)\n            okay[2] = 1;\n    }\n    //下移\n    for (int i = 0; i < k; ++i)\n    {\n        if (numMap[p[i].x][p[i].y+1] == -1)\n            okay[3] = 1;\n    }\n    int ans = 0;\n    for (int i = 0; i < 4; ++i)\n    {\n        ans += okay[i];\n    }\n    if (ans == 4)\n        return true;\n    return false;\n}\n\nint main(int argc, const char * argv[])\n{\n    int K;\n    string s;\n    while(cin >> K)\n    {\n        cin >> s;\n        for (int i = 0; i < s.length(); ++i)\n        {\n            numbers[i] = s[i]-'0';\n        }\n        if (judge(numbers, K))\n        {\n            cout << \"YES\" << endl;\n        }\n        else\n        {\n            cout << \"NO\" << endl;\n        }\n        \n    }\n    return 0;\n}\n\n```\n\n\n\n","source":"_posts/2016-07.md","raw":"---\ntitle: 2016-07-14 --- 2016-08-13\n---\n\n> 此题一共有2k人A，题目表述为暴力和构造函数，应该比较简单，作为开端\n\n[Problem Link-698-A](http://example.net/http://codeforces.com/problemset/problem/689/A)\n\n\n+ my code:\n```c++\nnclude <iostream>\n#include <vector>\nusing namespace std;\nint main(){\n    int n;\n    cin >> n;\n    vector<pair<int, int>> actions;\n    for (int i = 0; i < 12; ++i) {\n        auto cmd = i;\n        if (i == 0) {\n            cmd = 11;\n        }\n        actions.push_back({ (cmd-1) / 3, (cmd % 3 + 3 - 1) % 3 });\n    }\n\n    vector<pair<int, int>> aclist, sub;\n\n    int start;\n    for (int i = 0; i < n; ++i) {\n        char t;\n        cin >> t;\n        int nn = t - '0';\n        if (nn == 0) nn = 11;\n        if (i == 0) start = nn;\n        aclist.push_back(actions[nn]);\n    }\n\n    /*cout << aclist.size() << endl;\n    for (int i = 0; i < aclist.size(); ++i)\n        cout << '(' << aclist[i].first << \", \" << aclist[i].second << \") \";\n    cout << endl << '#' << endl;*/\n\n    for (int j = 1; j < aclist.size(); ++j) {\n        sub.push_back({\n            aclist[j].first - aclist[j - 1].first,\n            aclist[j].second - aclist[j - 1].second});\n    }\n    /*cout << sub.size() << endl;\n    for (int i = 0; i < sub.size(); ++i)\n        cout <<'(' << sub[i].first  << \", \" << sub[i].second << \") \";\n    cout << endl  << '#' << endl;*/\n\n    bool re = true;\n\n    for (int i = 1; i <= 11; ++i) {\n        if (i == 10 || i == start) continue;\n        int x = (i - 1) / 3;\n        int y = (i % 3  + 3 - 1) % 3;\n        bool one_re = true;\n        for (int j = 0; j < sub.size(); ++j) {\n            x += sub[j].first;\n            y += sub[j].second;\n            if ((x>=0 && x<=2 && y >=0 && y<=2) || (x==3 && y ==1)) {\n            } else {\n                one_re = false;\n                break;\n            }\n        }\n        if (one_re) {\n            re = false;\n            break;\n        }\n    }\n\n    if (re) {\n        cout << \"YES\";\n    } else {\n        cout << \"NO\";\n    }\n    /*getchar();\n    getchar();*/\n\n    return 0;\n}\n```\n\n+ Ak's code\n\n```c++\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nint numbers[11];\nint numMap[6][5] = { {-1, -1, -1, -1, -1},\n                     {-1,  1,  2,  3, -1},\n                     {-1,  4,  5,  6, -1},\n                     {-1,  7,  8,  9, -1},\n                     {-1, -1,  0, -1, -1},\n                     {-1, -1, -1, -1, -1} };\n\ntypedef struct\n{\n    int x, y;\n}Point;\n\nPoint findP(int x)\n{\n    Point p;\n    int status = 0;\n    for (int i = 0; i < 6; ++i)\n    {\n        for (int j = 0; j < 5; ++j)\n        {\n            if (numMap[i][j] == x)\n            {\n                p.x = i;\n                p.y = j;\n                status = 1;\n                break;\n            }\n        }\n        if(status == 1)\n            break;\n    }\n    return p;\n}\n\nbool judge(int num[], int k)\n{\n    Point p[k+1];\n    for (int i = 0; i < k; ++i)\n    {\n        p[i] = findP(num[i]);\n    }\n    int okay[4] = { 0 };\n    //左移\n    for (int i = 0; i < k; ++i)\n    {\n        if (numMap[p[i].x-1][p[i].y] == -1)\n            okay[0] = 1;\n    }\n    //右移\n    for (int i = 0; i < k; ++i)\n    {\n        if (numMap[p[i].x+1][p[i].y] == -1)\n            okay[1] = 1;\n    }\n    //上移\n    for (int i = 0; i < k; ++i)\n    {\n        if (numMap[p[i].x][p[i].y-1] == -1)\n            okay[2] = 1;\n    }\n    //下移\n    for (int i = 0; i < k; ++i)\n    {\n        if (numMap[p[i].x][p[i].y+1] == -1)\n            okay[3] = 1;\n    }\n    int ans = 0;\n    for (int i = 0; i < 4; ++i)\n    {\n        ans += okay[i];\n    }\n    if (ans == 4)\n        return true;\n    return false;\n}\n\nint main(int argc, const char * argv[])\n{\n    int K;\n    string s;\n    while(cin >> K)\n    {\n        cin >> s;\n        for (int i = 0; i < s.length(); ++i)\n        {\n            numbers[i] = s[i]-'0';\n        }\n        if (judge(numbers, K))\n        {\n            cout << \"YES\" << endl;\n        }\n        else\n        {\n            cout << \"NO\" << endl;\n        }\n        \n    }\n    return 0;\n}\n\n```\n\n\n\n","slug":"2016-07","published":1,"date":"2016-07-20T12:36:18.899Z","updated":"2016-07-20T12:36:18.899Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciquwgdvs0000s5w9d7qf97qk","content":"<blockquote>\n<p>此题一共有2k人A，题目表述为暴力和构造函数，应该比较简单，作为开端</p>\n</blockquote>\n<p><a href=\"http://example.net/http://codeforces.com/problemset/problem/689/A\" target=\"_blank\" rel=\"external\">Problem Link-698-A</a></p>\n<ul>\n<li><p>my code:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div></pre></td><td class=\"code\"><pre><div class=\"line\">nclude &lt;iostream&gt;</div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> n;</div><div class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n;</div><div class=\"line\">    <span class=\"built_in\">vector</span>&lt;pair&lt;<span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>&gt;&gt; actions;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">12</span>; ++i) &#123;</div><div class=\"line\">        <span class=\"keyword\">auto</span> cmd = i;</div><div class=\"line\">        <span class=\"keyword\">if</span> (i == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">            cmd = <span class=\"number\">11</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        actions.push_back(&#123; (cmd<span class=\"number\">-1</span>) / <span class=\"number\">3</span>, (cmd % <span class=\"number\">3</span> + <span class=\"number\">3</span> - <span class=\"number\">1</span>) % <span class=\"number\">3</span> &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">vector</span>&lt;pair&lt;<span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>&gt;&gt; aclist, sub;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">int</span> start;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</div><div class=\"line\">        <span class=\"keyword\">char</span> t;</div><div class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; t;</div><div class=\"line\">        <span class=\"keyword\">int</span> nn = t - <span class=\"string\">'0'</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (nn == <span class=\"number\">0</span>) nn = <span class=\"number\">11</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (i == <span class=\"number\">0</span>) start = nn;</div><div class=\"line\">        aclist.push_back(actions[nn]);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/*cout &lt;&lt; aclist.size() &lt;&lt; endl;</span></div><div class=\"line\">    for (int i = 0; i &lt; aclist.size(); ++i)</div><div class=\"line\">        cout &lt;&lt; '(' &lt;&lt; aclist[i].first &lt;&lt; \", \" &lt;&lt; aclist[i].second &lt;&lt; \") \";</div><div class=\"line\">    cout &lt;&lt; endl &lt;&lt; '#' &lt;&lt; endl;*/</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; aclist.size(); ++j) &#123;</div><div class=\"line\">        sub.push_back(&#123;</div><div class=\"line\">            aclist[j].first - aclist[j - <span class=\"number\">1</span>].first,</div><div class=\"line\">            aclist[j].second - aclist[j - <span class=\"number\">1</span>].second&#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/*cout &lt;&lt; sub.size() &lt;&lt; endl;</span></div><div class=\"line\">    for (int i = 0; i &lt; sub.size(); ++i)</div><div class=\"line\">        cout &lt;&lt;'(' &lt;&lt; sub[i].first  &lt;&lt; \", \" &lt;&lt; sub[i].second &lt;&lt; \") \";</div><div class=\"line\">    cout &lt;&lt; endl  &lt;&lt; '#' &lt;&lt; endl;*/</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">bool</span> re = <span class=\"literal\">true</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">11</span>; ++i) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (i == <span class=\"number\">10</span> || i == start) <span class=\"keyword\">continue</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> x = (i - <span class=\"number\">1</span>) / <span class=\"number\">3</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> y = (i % <span class=\"number\">3</span>  + <span class=\"number\">3</span> - <span class=\"number\">1</span>) % <span class=\"number\">3</span>;</div><div class=\"line\">        <span class=\"keyword\">bool</span> one_re = <span class=\"literal\">true</span>;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; sub.size(); ++j) &#123;</div><div class=\"line\">            x += sub[j].first;</div><div class=\"line\">            y += sub[j].second;</div><div class=\"line\">            <span class=\"keyword\">if</span> ((x&gt;=<span class=\"number\">0</span> &amp;&amp; x&lt;=<span class=\"number\">2</span> &amp;&amp; y &gt;=<span class=\"number\">0</span> &amp;&amp; y&lt;=<span class=\"number\">2</span>) || (x==<span class=\"number\">3</span> &amp;&amp; y ==<span class=\"number\">1</span>)) &#123;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                one_re = <span class=\"literal\">false</span>;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (one_re) &#123;</div><div class=\"line\">            re = <span class=\"literal\">false</span>;</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (re) &#123;</div><div class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"YES\"</span>;</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"NO\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/*getchar();</span></div><div class=\"line\">    getchar();*/</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Ak’s code</p>\n</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> numbers[<span class=\"number\">11</span>];</div><div class=\"line\"><span class=\"keyword\">int</span> numMap[<span class=\"number\">6</span>][<span class=\"number\">5</span>] = &#123; &#123;<span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>&#125;,</div><div class=\"line\">                     &#123;<span class=\"number\">-1</span>,  <span class=\"number\">1</span>,  <span class=\"number\">2</span>,  <span class=\"number\">3</span>, <span class=\"number\">-1</span>&#125;,</div><div class=\"line\">                     &#123;<span class=\"number\">-1</span>,  <span class=\"number\">4</span>,  <span class=\"number\">5</span>,  <span class=\"number\">6</span>, <span class=\"number\">-1</span>&#125;,</div><div class=\"line\">                     &#123;<span class=\"number\">-1</span>,  <span class=\"number\">7</span>,  <span class=\"number\">8</span>,  <span class=\"number\">9</span>, <span class=\"number\">-1</span>&#125;,</div><div class=\"line\">                     &#123;<span class=\"number\">-1</span>, <span class=\"number\">-1</span>,  <span class=\"number\">0</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>&#125;,</div><div class=\"line\">                     &#123;<span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>&#125; &#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> x, y;</div><div class=\"line\">&#125;Point;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">Point <span class=\"title\">findP</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    Point p;</div><div class=\"line\">    <span class=\"keyword\">int</span> status = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; ++i)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">5</span>; ++j)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (numMap[i][j] == x)</div><div class=\"line\">            &#123;</div><div class=\"line\">                p.x = i;</div><div class=\"line\">                p.y = j;</div><div class=\"line\">                status = <span class=\"number\">1</span>;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(status == <span class=\"number\">1</span>)</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> p;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">judge</span><span class=\"params\">(<span class=\"keyword\">int</span> num[], <span class=\"keyword\">int</span> k)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    Point p[k+<span class=\"number\">1</span>];</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; k; ++i)</div><div class=\"line\">    &#123;</div><div class=\"line\">        p[i] = findP(num[i]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">int</span> okay[<span class=\"number\">4</span>] = &#123; <span class=\"number\">0</span> &#125;;</div><div class=\"line\">    <span class=\"comment\">//左移</span></div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; k; ++i)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (numMap[p[i].x<span class=\"number\">-1</span>][p[i].y] == <span class=\"number\">-1</span>)</div><div class=\"line\">            okay[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//右移</span></div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; k; ++i)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (numMap[p[i].x+<span class=\"number\">1</span>][p[i].y] == <span class=\"number\">-1</span>)</div><div class=\"line\">            okay[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//上移</span></div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; k; ++i)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (numMap[p[i].x][p[i].y<span class=\"number\">-1</span>] == <span class=\"number\">-1</span>)</div><div class=\"line\">            okay[<span class=\"number\">2</span>] = <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//下移</span></div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; k; ++i)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (numMap[p[i].x][p[i].y+<span class=\"number\">1</span>] == <span class=\"number\">-1</span>)</div><div class=\"line\">            okay[<span class=\"number\">3</span>] = <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; ++i)</div><div class=\"line\">    &#123;</div><div class=\"line\">        ans += okay[i];</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span> (ans == <span class=\"number\">4</span>)</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> * argv[])</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> K;</div><div class=\"line\">    <span class=\"built_in\">string</span> s;</div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span> &gt;&gt; K)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; s;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s.length(); ++i)</div><div class=\"line\">        &#123;</div><div class=\"line\">            numbers[i] = s[i]-<span class=\"string\">'0'</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (judge(numbers, K))</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"YES\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"NO\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<blockquote>\n<p>此题一共有2k人A，题目表述为暴力和构造函数，应该比较简单，作为开端</p>\n</blockquote>\n<p><a href=\"http://example.net/http://codeforces.com/problemset/problem/689/A\">Problem Link-698-A</a></p>\n<ul>\n<li><p>my code:</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div></pre></td><td class=\"code\"><pre><div class=\"line\">nclude &lt;iostream&gt;</div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> n;</div><div class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n;</div><div class=\"line\">    <span class=\"built_in\">vector</span>&lt;pair&lt;<span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>&gt;&gt; actions;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">12</span>; ++i) &#123;</div><div class=\"line\">        <span class=\"keyword\">auto</span> cmd = i;</div><div class=\"line\">        <span class=\"keyword\">if</span> (i == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">            cmd = <span class=\"number\">11</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        actions.push_back(&#123; (cmd<span class=\"number\">-1</span>) / <span class=\"number\">3</span>, (cmd % <span class=\"number\">3</span> + <span class=\"number\">3</span> - <span class=\"number\">1</span>) % <span class=\"number\">3</span> &#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">vector</span>&lt;pair&lt;<span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>&gt;&gt; aclist, sub;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">int</span> start;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</div><div class=\"line\">        <span class=\"keyword\">char</span> t;</div><div class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; t;</div><div class=\"line\">        <span class=\"keyword\">int</span> nn = t - <span class=\"string\">'0'</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (nn == <span class=\"number\">0</span>) nn = <span class=\"number\">11</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (i == <span class=\"number\">0</span>) start = nn;</div><div class=\"line\">        aclist.push_back(actions[nn]);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/*cout &lt;&lt; aclist.size() &lt;&lt; endl;</div><div class=\"line\">    for (int i = 0; i &lt; aclist.size(); ++i)</div><div class=\"line\">        cout &lt;&lt; '(' &lt;&lt; aclist[i].first &lt;&lt; \", \" &lt;&lt; aclist[i].second &lt;&lt; \") \";</div><div class=\"line\">    cout &lt;&lt; endl &lt;&lt; '#' &lt;&lt; endl;*/</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; aclist.size(); ++j) &#123;</div><div class=\"line\">        sub.push_back(&#123;</div><div class=\"line\">            aclist[j].first - aclist[j - <span class=\"number\">1</span>].first,</div><div class=\"line\">            aclist[j].second - aclist[j - <span class=\"number\">1</span>].second&#125;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/*cout &lt;&lt; sub.size() &lt;&lt; endl;</div><div class=\"line\">    for (int i = 0; i &lt; sub.size(); ++i)</div><div class=\"line\">        cout &lt;&lt;'(' &lt;&lt; sub[i].first  &lt;&lt; \", \" &lt;&lt; sub[i].second &lt;&lt; \") \";</div><div class=\"line\">    cout &lt;&lt; endl  &lt;&lt; '#' &lt;&lt; endl;*/</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">bool</span> re = <span class=\"literal\">true</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">11</span>; ++i) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (i == <span class=\"number\">10</span> || i == start) <span class=\"keyword\">continue</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> x = (i - <span class=\"number\">1</span>) / <span class=\"number\">3</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> y = (i % <span class=\"number\">3</span>  + <span class=\"number\">3</span> - <span class=\"number\">1</span>) % <span class=\"number\">3</span>;</div><div class=\"line\">        <span class=\"keyword\">bool</span> one_re = <span class=\"literal\">true</span>;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; sub.size(); ++j) &#123;</div><div class=\"line\">            x += sub[j].first;</div><div class=\"line\">            y += sub[j].second;</div><div class=\"line\">            <span class=\"keyword\">if</span> ((x&gt;=<span class=\"number\">0</span> &amp;&amp; x&lt;=<span class=\"number\">2</span> &amp;&amp; y &gt;=<span class=\"number\">0</span> &amp;&amp; y&lt;=<span class=\"number\">2</span>) || (x==<span class=\"number\">3</span> &amp;&amp; y ==<span class=\"number\">1</span>)) &#123;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                one_re = <span class=\"literal\">false</span>;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (one_re) &#123;</div><div class=\"line\">            re = <span class=\"literal\">false</span>;</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (re) &#123;</div><div class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"YES\"</span>;</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"NO\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/*getchar();</div><div class=\"line\">    getchar();*/</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>Ak’s code</p>\n</li>\n</ul>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">int</span> numbers[<span class=\"number\">11</span>];</div><div class=\"line\"><span class=\"keyword\">int</span> numMap[<span class=\"number\">6</span>][<span class=\"number\">5</span>] = &#123; &#123;<span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>&#125;,</div><div class=\"line\">                     &#123;<span class=\"number\">-1</span>,  <span class=\"number\">1</span>,  <span class=\"number\">2</span>,  <span class=\"number\">3</span>, <span class=\"number\">-1</span>&#125;,</div><div class=\"line\">                     &#123;<span class=\"number\">-1</span>,  <span class=\"number\">4</span>,  <span class=\"number\">5</span>,  <span class=\"number\">6</span>, <span class=\"number\">-1</span>&#125;,</div><div class=\"line\">                     &#123;<span class=\"number\">-1</span>,  <span class=\"number\">7</span>,  <span class=\"number\">8</span>,  <span class=\"number\">9</span>, <span class=\"number\">-1</span>&#125;,</div><div class=\"line\">                     &#123;<span class=\"number\">-1</span>, <span class=\"number\">-1</span>,  <span class=\"number\">0</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>&#125;,</div><div class=\"line\">                     &#123;<span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>&#125; &#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> x, y;</div><div class=\"line\">&#125;Point;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">Point <span class=\"title\">findP</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    Point p;</div><div class=\"line\">    <span class=\"keyword\">int</span> status = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">6</span>; ++i)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">5</span>; ++j)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (numMap[i][j] == x)</div><div class=\"line\">            &#123;</div><div class=\"line\">                p.x = i;</div><div class=\"line\">                p.y = j;</div><div class=\"line\">                status = <span class=\"number\">1</span>;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>(status == <span class=\"number\">1</span>)</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> p;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">judge</span><span class=\"params\">(<span class=\"keyword\">int</span> num[], <span class=\"keyword\">int</span> k)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    Point p[k+<span class=\"number\">1</span>];</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; k; ++i)</div><div class=\"line\">    &#123;</div><div class=\"line\">        p[i] = findP(num[i]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">int</span> okay[<span class=\"number\">4</span>] = &#123; <span class=\"number\">0</span> &#125;;</div><div class=\"line\">    <span class=\"comment\">//左移</span></div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; k; ++i)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (numMap[p[i].x<span class=\"number\">-1</span>][p[i].y] == <span class=\"number\">-1</span>)</div><div class=\"line\">            okay[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//右移</span></div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; k; ++i)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (numMap[p[i].x+<span class=\"number\">1</span>][p[i].y] == <span class=\"number\">-1</span>)</div><div class=\"line\">            okay[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//上移</span></div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; k; ++i)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (numMap[p[i].x][p[i].y<span class=\"number\">-1</span>] == <span class=\"number\">-1</span>)</div><div class=\"line\">            okay[<span class=\"number\">2</span>] = <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">//下移</span></div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; k; ++i)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (numMap[p[i].x][p[i].y+<span class=\"number\">1</span>] == <span class=\"number\">-1</span>)</div><div class=\"line\">            okay[<span class=\"number\">3</span>] = <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; ++i)</div><div class=\"line\">    &#123;</div><div class=\"line\">        ans += okay[i];</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">if</span> (ans == <span class=\"number\">4</span>)</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> * argv[])</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> K;</div><div class=\"line\">    <span class=\"built_in\">string</span> s;</div><div class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span> &gt;&gt; K)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; s;</div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s.length(); ++i)</div><div class=\"line\">        &#123;</div><div class=\"line\">            numbers[i] = s[i]-<span class=\"string\">'0'</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (judge(numbers, K))</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"YES\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"NO\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"R2 Language","_content":"\n##### Grammar\n\n+ 变量：x\n+ 函数：(lambda (x) e)\n+ 绑定：(let ([x e1]) e2)\n+ 调用：(e1 e2)\n+ 算术：(• e2 e2)\n+（其中，• 是一个算术操作符，可以选择 +, -, *, / 其中之一）\n\n\n","source":"_posts/R2.md","raw":"---\ntitle: R2 Language\n---\n\n##### Grammar\n\n+ 变量：x\n+ 函数：(lambda (x) e)\n+ 绑定：(let ([x e1]) e2)\n+ 调用：(e1 e2)\n+ 算术：(• e2 e2)\n+（其中，• 是一个算术操作符，可以选择 +, -, *, / 其中之一）\n\n\n","slug":"R2","published":1,"date":"2016-07-20T12:36:18.899Z","updated":"2016-07-20T12:36:18.899Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciquwgdw40001s5w9wbpuwzcl","content":"<h5 id=\"Grammar\"><a href=\"#Grammar\" class=\"headerlink\" title=\"Grammar\"></a>Grammar</h5><ul>\n<li>变量：x</li>\n<li>函数：(lambda (x) e)</li>\n<li>绑定：(let ([x e1]) e2)</li>\n<li>调用：(e1 e2)</li>\n<li>算术：(• e2 e2)<br>+（其中，• 是一个算术操作符，可以选择 +, -, *, / 其中之一）</li>\n</ul>\n","excerpt":"","more":"<h5 id=\"Grammar\"><a href=\"#Grammar\" class=\"headerlink\" title=\"Grammar\"></a>Grammar</h5><ul>\n<li>变量：x</li>\n<li>函数：(lambda (x) e)</li>\n<li>绑定：(let ([x e1]) e2)</li>\n<li>调用：(e1 e2)</li>\n<li>算术：(• e2 e2)<br>+（其中，• 是一个算术操作符，可以选择 +, -, *, / 其中之一）</li>\n</ul>\n"},{"title":"Start Again Again","_content":"\nI want to write R2 then R3 then R4...\n","source":"_posts/start.md","raw":"---\ntitle: Start Again Again\n---\n\nI want to write R2 then R3 then R4...\n","slug":"start","published":1,"date":"2016-07-20T12:36:18.899Z","updated":"2016-07-20T12:36:18.899Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciquwgdw90002s5w9ariczpwn","content":"<p>I want to write R2 then R3 then R4…</p>\n","excerpt":"","more":"<p>I want to write R2 then R3 then R4…</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}